//pseudocode

testMode{
    //deck of cards not randomized
    deck;
    //should follow rules of game
}

dealer{
String name;
Integer dealerMoney;
//displays prob the hidden card has a value of 10
double tenProbability();
Hand DealerHand;
double netMoney;

}

players{
    //stores info for each player
    //may need hasmap
    String name;
    Integer humanMoney = 200;
    Integer numberOfPlayers;
    player listOfplayers;
    boolean playercount();
    

}


Player{
Hand hand;
String id;
boolean in;
getHand();
}


BlackJack{
   
    distributes(String hand);
    void startgame(listOfPlayers, Deck);
    void startNewGame(listOfPlayers, Deck);

}

deck{

    int hearts, spades, clovers, diamonds = 13;
    arrayList<card> deck;
    int totalcards;
    void shuffle(arrayList cards);
    
    //object deck to store independent data such as remaining cards
    deck{
    //keep count of how many cards have been used for each deck independently
    cardCount;
    //keeps track of how many cards are left
    cardsLeft;
    //the card that will be face up
    faceUpCard;
    }
       
    //to keep track of how many decks are chosen
    int numDecks;
    //might need hashmap or array
    String deck;
    //keep track of total cards left in game
    int totalCards;
    //randomly picks card for player/bot
    Rdm cardPick();
    getRandom();
    //display cards
    void nextCardDisplay(arrayList cards);
}


card{
int value;
string Suite;
int getVal();

}

hand{
arrayList<card> cards;
int totalVal;
int getVal();
void updateDeck(deck); 
}


bots{
    //might need array or hashmap to keep track of how many players are online
    
    Hand hand;
    String behavior;
    
    Integer numberOfBots;
    String name;
    String hand;
    //Integer botMoney = 200;
    double balance = 200;
    boolean in;
    //using rand, can use function to determing risk level
    void riskLevel(behavior);
    hand getHand();

}

gameRules{
    //can use to use switch for each game action such as "hit", "double", etc...
    enum rules();
    enum playOption();
    // game rules and algorithms should be done here

}

money {
//will handle the math and logic of money
void displayCash();
void bet(player);
Integer remainingCash;
//makes sure dealer always has cash
dealerCash();

}

main{
    startGame();
    //displays who's turn it is
    playerTurn();
    //20 seconds to take turn
    Integer playTimer = 20;
}


pointCount{
    //shows the points for each hand
    pointDisplay(String cards);
    //logic to stop from drawing cards after 21 has been exceeded
    if points >21, stop;

    //logic to check for blackjack
    if points == 21..
    ifelse dealerPts == 21
    ifelse playerPts ==21
    ifelse botPts ==21
    else take money
    
    winner(listOfPlayers, Deck);

}

gamerServer{

    //gameserver stuff here
}

hints{
    //logic to display hints on screen
    String displayHints(jbutton hint);
    Arraylist<String> hints;

}
